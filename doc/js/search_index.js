var search_data = {"index":{"searchIndex":["colorstools","game","humanplayer","object","pcplayer","absolute_feedback()","clear_guess()","compare()","error()","feedback_zero()","game_mode()","game_over()","game_start()","manual_combination()","new()","new()","new()","random_color()","relative_fedback()","retry?()","round()","round_vs_human()","same_code_feedback()","set_guess()","set_secret_code()","to_colors()","turns_left()","valid_nums?()"],"longSearchIndex":["colorstools","game","humanplayer","object","pcplayer","game#absolute_feedback()","humanplayer#clear_guess()","game#compare()","colorstools::error()","game#feedback_zero()","object#game_mode()","game#game_over()","game#game_start()","colorstools::manual_combination()","game::new()","humanplayer::new()","pcplayer::new()","colorstools::random_color()","game#relative_fedback()","game#retry?()","object#round()","object#round_vs_human()","game#same_code_feedback()","humanplayer#set_guess()","pcplayer#set_secret_code()","colorstools::to_colors()","game#turns_left()","colorstools::valid_nums?()"],"info":[["ColorsTools","","ColorsTools.html","","<p>This module provides tools to geneate a combination of up to 4 colors.\n"],["Game","","Game.html","","<p>This class creates agame instances.\n"],["HumanPlayer","","HumanPlayer.html","","<p>HumanPlayer class allows to create instances of human playersn for mastermind game.\n"],["Object","","Object.html","",""],["PcPlayer","","PcPlayer.html","",""],["absolute_feedback","Game","Game.html#method-i-absolute_feedback","()",""],["clear_guess","HumanPlayer","HumanPlayer.html#method-i-clear_guess","()","<p>clear guess: clear content of @guess.\n"],["compare","Game","Game.html#method-i-compare","(a, b)","<p>compare takes two array of colors as arguments. and returns differents feedbacks based upon the result. …\n"],["error","ColorsTools","ColorsTools.html#method-c-error","()","<p>error: prints message on screen : “Code non valid!. Please select four numbers between 1 and 6.” …\n"],["feedback_zero","Game","Game.html#method-i-feedback_zero","()",""],["game_mode","Object","Object.html#method-i-game_mode","()",""],["game_over","Game","Game.html#method-i-game_over","()",""],["game_start","Game","Game.html#method-i-game_start","(current_secret)","<p>Initialize the game\n"],["manual_combination","ColorsTools","ColorsTools.html#method-c-manual_combination","()","<p>#manual_combination: Allows to select a combinantion of four intergers from 1 to 6. eache one representing …\n"],["new","Game","Game.html#method-c-new","()",""],["new","HumanPlayer","HumanPlayer.html#method-c-new","()",""],["new","PcPlayer","PcPlayer.html#method-c-new","()",""],["random_color","ColorsTools","ColorsTools.html#method-c-random_color","()","<p>random_color: returns a new array of four colors. Uses #sample.\n"],["relative_fedback","Game","Game.html#method-i-relative_fedback","()",""],["retry?","Game","Game.html#method-i-retry-3F","()","<p>Ask the player if wnats to play another match. Only posibles answers are y for yes and n for no.\n"],["round","Object","Object.html#method-i-round","()",""],["round_vs_human","Object","Object.html#method-i-round_vs_human","()",""],["same_code_feedback","Game","Game.html#method-i-same_code_feedback","()",""],["set_guess","HumanPlayer","HumanPlayer.html#method-i-set_guess","()","<p>#set_guess uses #manual_combination, #valid_nums? and #error from ColorsTools modules to set the contents …\n"],["set_secret_code","PcPlayer","PcPlayer.html#method-i-set_secret_code","()",""],["to_colors","ColorsTools","ColorsTools.html#method-c-to_colors","(code)","<p>#to_colors: Takes a valid array as the only argument. Returns a new array of colors\n"],["turns_left","Game","Game.html#method-i-turns_left","()",""],["valid_nums?","ColorsTools","ColorsTools.html#method-c-valid_nums-3F","(code)","<p>#valid_nums?: Takes an array as arguments. returns true if the array’s contents are four intergers …\n"]]}}